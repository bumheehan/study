<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 접근거부 핸들러 -->
	<bean id="customAccessDenied"
		class="com.bumbing.security.CustomAccessDeniedHandler"></bean>
	<!-- 로그인 성공시 핸들러 -->
	<bean id="customLoginSuccess"
		class="com.bumbing.security.CustomLoginSuccessHandler"></bean>

	<!-- 비밀번호 암호화 빈 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 유저정보 -->
	<bean id="customUserDetailsService"
		class="com.bumbing.security.CustomUserDetailsService"></bean>


	<security:http>
		<!-- url 마다 권한주기 -->
		<security:intercept-url pattern="/sample/all"
			access="permitAll" />

		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />

		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />

		<security:access-denied-handler
			ref="customAccessDenied" />
			
		<!-- 로그인 url 정의 -->
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />
                                                                                                                                                                
		<security:logout logout-url="/customLogout"
			invalidate-session="true" />

		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />

		<security:logout logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
			
	</security:http>

	<!--  유저 서비스와 암호화 빈을 프로바이더에 정의 -->
	<security:authentication-manager>

		<security:authentication-provider
			user-service-ref="customUserDetailsService">

			<security:password-encoder
				ref="bcryptPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>

</beans>
